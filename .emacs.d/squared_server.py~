#!/apps/pydev/bin/python2.4
# *** ZSI 2.0 ***
from optparse import OptionParser

# Import the ZSI stuff you√¢d need no matter what
from ZSI.wstools import logging
from ZSI.ServiceContainer import AsServer

# Import the generated Server Object
from SquareService_services_server import SquareService

# Create a Server implementation by inheritance
class MySquareService(SquareService):

    # Make WSDL available for HTTP GET
    _wsdl = "".join(open("SquareService.wsdl").readlines())

    def soap_getSquare(self, ps, **kw):
        # Call the generated base class method to get appropriate
        # input/output data structures
        response = SquareService.soap_getSquare(self, ps, **kw)
        request = self.request
        response._return = self.getSquare(request._x)
        return response

    def getSquare(self, x):
        return x**2

op = OptionParser(usage="%prog [options]")
op.add_option("-l", "--loglevel", help="loglevel (DEBUG, WARN)", metavar="LOGLEVEL")
op.add_option("-p", "--port", help="HTTP port", metavar="PORT", default=8080, type="int")
options, args = op.parse_args()

# set the loglevel according to cmd line arg
if options.loglevel:
    loglevel = eval(options.loglevel, logging.__dict__)
    logger = logging.getLogger("")
    logger.setLevel(loglevel)

# Run the server with a given list services
AsServer(port=options.port, services=[MySquareService(),])
