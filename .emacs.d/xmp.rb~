#!/usr/bin/ruby
module Kernel
  XMP_VERSION = "2000-02-07"
  XMP_DEFAULT_OPTION = ["%l\n    #%r\n", "\n    #   "]

  def xmpsec(*a) puts *a; end

  def xmp(arg, fmt = XMP_DEFAULT_OPTION[0], sep=XMP_DEFAULT_OPTION[1])
    if fmt
      fmt = fmt.to_s
      eval("___sep___ = #{sep.inspect}; ___res___ = []", TOPLEVEL_BINDING)
      eval(arg.gsub(/^(.*)\n?/){
             %Q|
             begin
               ___res___ << "=> " + (#{$1}).inspect.gsub(/\n^/, ___sep___);
             rescue
               ___res___ << "!! " + $!;
             end|}, TOPLEVEL_BINDING)
      arg.split(/\n/).each_with_index{|l,i|
        (puts "\n" ; next) if l =~ /^$/
        res = fmt.gsub(/%l/, l)
        res = res.gsub(/%r/, eval("___res___", TOPLEVEL_BINDING)[i])
        print res
      }
    else
      print arg; eval(arg, TOPLEVEL_BINDING)
    end
  end
  alias __xmp__ xmp
end

if __FILE__ == $0

  puts "## EXAMPLE 1"
  xmp "nil.to_i"

  puts ""
  puts "## EXAMPLE 2"
  xmp <<-EOS
  a = "The moon Fly"
  b = [a.split, "TO", "Me"]
  b = b.flatten
  b.sort!
  b.join(" ").capitalize
  EOS

  puts ""
  puts "## EXAMPLE 3"
  xmp <<-EOS, false
  class Foo
    attr :a, true
  end

  EOS

  xmp <<-EOS
  foo = Foo.new
  foo.a
  foo.a = 10
  foo.b
  foo.a
  EOS
end
